// <auto-generated />
using System;
using Infra.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infra.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerContex))]
    partial class SqlServerContexModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Controle_Patrimonial.Domain.Bloco", b =>
                {
                    b.Property<int>("BlocoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlocoId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BlocoId");

                    b.ToTable("Blocos");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.CheckIn", b =>
                {
                    b.Property<int>("CheckInId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckInId"));

                    b.Property<DateTime>("DataEnvio")
                        .HasColumnType("datetime2");

                    b.Property<string>("EmailEnviado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("CheckInId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("CheckIns");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.CheckInPatrimonio", b =>
                {
                    b.Property<int>("CheckInPatrimonioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CheckInPatrimonioId"));

                    b.Property<int>("CheckInId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataCheckIn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PatrimonioId")
                        .HasColumnType("int");

                    b.HasKey("CheckInPatrimonioId");

                    b.HasIndex("CheckInId");

                    b.HasIndex("PatrimonioId");

                    b.ToTable("CheckInPatrimonios");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.Patrimonio", b =>
                {
                    b.Property<int>("PatrimonioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatrimonioId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<int>("BlocoId")
                        .HasColumnType("int");

                    b.Property<string>("CodigoBarra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataRegistro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NotaFiscal")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<float>("Valor")
                        .HasColumnType("real");

                    b.HasKey("PatrimonioId");

                    b.HasIndex("BlocoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Patrimonios");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UsuarioId"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.CheckIn", b =>
                {
                    b.HasOne("Controle_Patrimonial.Domain.Usuario", "Usuario")
                        .WithMany("CheckIns")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.CheckInPatrimonio", b =>
                {
                    b.HasOne("Controle_Patrimonial.Domain.CheckIn", "CheckIn")
                        .WithMany()
                        .HasForeignKey("CheckInId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Controle_Patrimonial.Domain.Patrimonio", "Patrimonio")
                        .WithMany()
                        .HasForeignKey("PatrimonioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CheckIn");

                    b.Navigation("Patrimonio");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.Patrimonio", b =>
                {
                    b.HasOne("Controle_Patrimonial.Domain.Bloco", "Bloco")
                        .WithMany("Patrimonios")
                        .HasForeignKey("BlocoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Controle_Patrimonial.Domain.Usuario", "Usuario")
                        .WithMany("Patrimonios")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Bloco");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.Bloco", b =>
                {
                    b.Navigation("Patrimonios");
                });

            modelBuilder.Entity("Controle_Patrimonial.Domain.Usuario", b =>
                {
                    b.Navigation("CheckIns");

                    b.Navigation("Patrimonios");
                });
#pragma warning restore 612, 618
        }
    }
}
